{"version":3,"file":"link.js","sourceRoot":"","sources":["../../../../../src/cli/services/app/config/link.ts"],"names":[],"mappings":"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","sourcesContent":["import {saveCurrentConfig} from './use.js'\nimport {\n  AppConfiguration,\n  AppInterface,\n  EmptyApp,\n  isCurrentAppSchema,\n  isLegacyAppSchema,\n} from '../../../models/app/app.js'\nimport {OrganizationApp} from '../../../models/organization.js'\nimport {selectConfigName} from '../../../prompts/config.js'\nimport {getAppConfigurationFileName, loadApp} from '../../../models/app/loader.js'\nimport {InvalidApiKeyErrorMessage, fetchOrCreateOrganizationApp, logMetadataForLoadedContext} from '../../context.js'\nimport {BetaFlag, fetchAppDetailsFromApiKey} from '../../dev/fetch.js'\nimport {configurationFileNames} from '../../../constants.js'\nimport {writeAppConfigurationFile} from '../write-app-configuration-file.js'\nimport {getCachedCommandInfo} from '../../local-storage.js'\nimport {PartnersSession, fetchPartnersSession} from '../../context/partner-account-info.js'\nimport {ExtensionSpecification} from '../../../models/extensions/specification.js'\nimport {fetchSpecifications} from '../../generate/fetch-extension-specifications.js'\nimport {loadLocalExtensionsSpecifications} from '../../../models/extensions/load-specifications.js'\nimport {fetchAppRemoteConfiguration} from '../select-app.js'\nimport {renderSuccess} from '@shopify/cli-kit/node/ui'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {formatPackageManagerCommand} from '@shopify/cli-kit/node/output'\nimport {deepMergeObjects, isEmpty} from '@shopify/cli-kit/common/object'\nimport {joinPath} from '@shopify/cli-kit/node/path'\n\nexport interface LinkOptions {\n  directory: string\n  apiKey?: string\n  configName?: string\n  baseConfigName?: string\n}\n\nexport default async function link(options: LinkOptions, shouldRenderSuccess = true): Promise<AppConfiguration> {\n  const {token, remoteApp, directory} = await selectRemoteApp(options)\n  const {localApp, configFileName, configFilePath} = await loadLocalApp(options, token, remoteApp, directory)\n\n  await logMetadataForLoadedContext(remoteApp)\n\n  let configuration = addLocalAppConfig(localApp.configuration, remoteApp, configFilePath)\n  const remoteAppConfiguration = await fetchAppRemoteConfiguration(\n    remoteApp.apiKey,\n    token,\n    localApp.specifications ?? [],\n  )\n  const replaceLocalArrayStrategy = (_destinationArray: unknown[], sourceArray: unknown[]) => sourceArray\n  configuration = deepMergeObjects(configuration, remoteAppConfiguration, replaceLocalArrayStrategy)\n\n  await writeAppConfigurationFile(configuration, localApp.configSchema)\n  await saveCurrentConfig({configFileName, directory})\n\n  if (shouldRenderSuccess) {\n    renderSuccessMessage(configFileName, remoteAppConfiguration.name, localApp)\n  }\n\n  return configuration\n}\n\nasync function selectRemoteApp(options: LinkOptions) {\n  const localApp = await loadAppOrEmptyApp(options)\n  const directory = localApp?.directory || options.directory\n  const partnersSession = await fetchPartnersSession()\n  const remoteApp = await loadRemoteApp(localApp, options.apiKey, partnersSession, directory)\n  return {\n    token: partnersSession.token,\n    remoteApp,\n    directory,\n  }\n}\n\nasync function loadLocalApp(options: LinkOptions, token: string, remoteApp: OrganizationApp, directory: string) {\n  const specifications = await fetchSpecifications({\n    token,\n    apiKey: remoteApp.apiKey,\n  })\n  const localApp = await loadAppOrEmptyApp(options, specifications, remoteApp.betas, remoteApp)\n  const configFileName = await loadConfigurationFileName(remoteApp, options, localApp)\n  const configFilePath = joinPath(directory, configFileName)\n  return {\n    localApp,\n    configFileName,\n    configFilePath,\n  }\n}\n\nasync function loadAppOrEmptyApp(\n  options: LinkOptions,\n  specifications?: ExtensionSpecification[],\n  remoteBetas?: BetaFlag[],\n  remoteApp?: OrganizationApp,\n): Promise<AppInterface> {\n  try {\n    const app = await loadApp({\n      specifications,\n      directory: options.directory,\n      mode: 'report',\n      configName: options.baseConfigName,\n      remoteBetas,\n    })\n    const configuration = app.configuration\n    if (!isCurrentAppSchema(configuration) || remoteApp?.apiKey === configuration.client_id) return app\n    return new EmptyApp(await loadLocalExtensionsSpecifications(), remoteBetas, remoteApp?.apiKey)\n    // eslint-disable-next-line no-catch-all/no-catch-all\n  } catch (error) {\n    return new EmptyApp(await loadLocalExtensionsSpecifications(), remoteBetas)\n  }\n}\n\nasync function loadRemoteApp(\n  localApp: AppInterface,\n  apiKey: string | undefined,\n  partnersSession: PartnersSession,\n  directory?: string,\n): Promise<OrganizationApp> {\n  if (!apiKey) {\n    return fetchOrCreateOrganizationApp(localApp, partnersSession, directory)\n  }\n  const app = await fetchAppDetailsFromApiKey(apiKey, partnersSession.token)\n  if (!app) {\n    const errorMessage = InvalidApiKeyErrorMessage(apiKey)\n    throw new AbortError(errorMessage.message, errorMessage.tryMessage)\n  }\n  return app\n}\n\nasync function loadConfigurationFileName(\n  remoteApp: OrganizationApp,\n  options: LinkOptions,\n  localApp: AppInterface,\n): Promise<string> {\n  const cache = getCachedCommandInfo()\n\n  if (!cache?.askConfigName && cache?.selectedToml) return cache.selectedToml as string\n\n  if (options.configName) {\n    return getAppConfigurationFileName(options.configName)\n  }\n\n  if (isLegacyAppSchema(localApp.configuration)) {\n    return configurationFileNames.app\n  }\n\n  const configName = await selectConfigName(localApp.directory || options.directory, remoteApp.title)\n  return `shopify.app.${configName}.toml`\n}\n\nfunction addLocalAppConfig(appConfiguration: AppConfiguration, remoteApp: OrganizationApp, configFilePath: string) {\n  let localAppConfig = {\n    ...appConfiguration,\n    client_id: remoteApp.apiKey,\n    path: configFilePath,\n  }\n  if (isCurrentAppSchema(localAppConfig)) {\n    delete localAppConfig.auth\n    const build = {\n      ...(remoteApp.newApp ? {include_config_on_deploy: true} : {}),\n      ...(appConfiguration.client_id === remoteApp.apiKey ? localAppConfig.build : {}),\n    }\n    if (isEmpty(build)) {\n      delete localAppConfig.build\n    } else {\n      localAppConfig = {\n        ...localAppConfig,\n        build,\n      }\n    }\n  }\n  return localAppConfig\n}\n\nfunction renderSuccessMessage(configFileName: string, appName: string, localApp: AppInterface) {\n  renderSuccess({\n    headline: `${configFileName} is now linked to \"${appName}\" on Shopify`,\n    body: `Using ${configFileName} as your default config.`,\n    nextSteps: [\n      [`Make updates to ${configFileName} in your local project`],\n      [\n        'To upload your config, run',\n        {\n          command: formatPackageManagerCommand(localApp.packageManager, 'shopify app deploy'),\n        },\n      ],\n    ],\n    reference: [\n      {\n        link: {\n          label: 'App configuration',\n          url: 'https://shopify.dev/docs/apps/tools/cli/configuration',\n        },\n      },\n    ],\n  })\n}\n"]}